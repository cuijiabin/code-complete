第13章 不常见的数据类型

13.1 结构
13.2 指针
	用来理解指针的例子
	使用指针的一般技巧
	C++指针
	C指针
13.3 全局数据
	与全局数据有关的常见问题
	使用全局数据的理由
	只有万不得已时才使用全局数据
	用访问子程序来取代全局数据
	如何降低使用全局数据的风险
	其他资源


13.1 结构体
13.2 使用指针的一般技巧

1、把指针操作限制在子程序或类里面。
2、同时声明和定义指针。
3、用狗牌字段来检查损毁的指针。


C++中，把指针用于按值传递，把const用于按值传递。

灵活使用智能指针。

使用auto_ptr：

13.3 全局变量

全局变量对于程序的破坏性很大，不到万不得已，不要使用全局变量。

对全局变量的访问，使用访问器子程序。

用访问器子程序来取代全局变量：

访问器子程序可以实现隐藏。

对数据集中控制。

确保对变量的所有的引用得到保护。

实现信息隐藏。

可以很容易的转变为抽象数据类型。可以写出精致的代码。

便于调试。

1、要求所有的代码通过访问器子程序来访问全局变量。这样所有全局变量定义为static，并且所有程序不可以保护“g_”开头的变量。
2、把不同的全局变量放在不同的文件或类中。
3、用锁定来控制对全局变量的访问。
4、在你的访问器子程序中构建一个抽象层。要在问题域这一层次上构建访问器子程序，而不是细节实现层次上。要让访问器子程序表达抽象的意义。
5、对一项数据的所有访问都发生在同一个抽象层次上。