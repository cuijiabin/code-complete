第29章 集成

29.1 集成方式的重要性
29.2 集成频率——阶段式集成还是增量集成
	阶段式集成
	增量集成
	增量集成的益处
29.3 增量集成的策略
	自顶向下集成
	自底向上集成
	三明治集成
	风险导向的集成
	功能导向的集成
	T-型集成
	集成方法小结
29.4 Daily Build与冒烟测试
	哪种项目能用daily build过程？
	持续集成
	额外资源


集成就是将软件的各个部件组合到一起成为系统

集成的重要性
	华盛顿体育馆坍塌就是因为集成没有做好
	好处
		能更方便地诊断错误
		能减少缺陷
		能减少“脚手架”
		能更快地发布第一个版本
		能缩短开发周期
		能有更好的客户关系
		能增强团队信心
		能提高项目完成的几率（译者注：或者说减少项目风险）
		能提高进度估算的准确性
		能增加项目进度报告的准确性
		能增强代码质量
		能减少文档数量

多久集成一次——分阶段集成还是增量集成？
	分阶段集成
		步骤
			单元开发：设计、编码、测试
			系统集成：将编写完成的类合并在一起，组合成系统
			系统合成：测试、调试整个系统
		又称为大爆炸集成
		只适用于很小的项目，两三个类的项目

	增量集成
		步骤
			开发一个很小的系统，完成最小功能集，建立好整个系统的骨架
			设计、编码、测试、调试各个类
			将新的类集成到骨架中，重复2，3步骤

		又称为滚雪球集成
		好处
			能非常方便地判断出出错位置
			项目能提早做完
			能方便地跟踪进度
			能改善客户关系
			系统的每个单元能测试地更加完全
			能减少系统的开发周期
			能激励其他增量式开发方法

	增量集成策略
		自顶向下集成
		自底向上集成
		三明治集成
		面向风险集成
		面向特性集成
			能消除几乎所有的“脚手架”
			每次集成都能增加功能
			能很好地适应面向对象编程方法

		T形集成
			先深入开发一个模块，试探系统的难度
			再自顶向下集成